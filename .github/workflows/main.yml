name: PiCloud CI (Windows Only)

on:
  push:
    branches:
      - master
      - '[0-9]+'
  pull_request:
  workflow_dispatch:

concurrency: 
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  VERSION: ${{ github.run_number }}
  ARTIFACT_DIR: ${{ github.workspace }}/binaries

jobs:
  build:
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: windows-cl-x86_64
            target: windows-cl-msvc2022-x86_64
            os: windows-latest
            useSonarCloud: ${{ github.event_name != 'pull_request' }}

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    env:
      CRAFT_TARGET: ${{ matrix.target }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Check out latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: ~/cache
          key: ${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-

      - name: Clone CraftMaster
        run: git clone --depth=1 https://invent.kde.org/kde/craftmaster.git "$env:HOME/craft/CraftMaster/CraftMaster"

      - name: Craft setup
        run: |
          New-Item -Path ~/cache -ItemType Directory -ErrorAction SilentlyContinue
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" --setup

      # ===== BRANDING SETUP =====
      - name: Setup piCloud Branding
        shell: pwsh
        run: |
          # 1. Create branding directory
          $brandingDir = ".craft/blueprints/owncloud/owncloud-client/files"
          New-Item -ItemType Directory -Force -Path $brandingDir | Out-Null
          
          # 2. Create branding.nsi
          @"
          !define COMPANYNAME "LNKASIA TECHSOL."
          !define PRODUCTNAME "piCloud"
          !define VERSION "$env:VERSION"
          !define SHORTCUT_NAME "piCloud"
          !define UNINSTALL_DISPLAY_NAME "piCloud Client"
          "@ | Out-File "$brandingDir/branding.nsi" -Encoding ASCII

          # 3. Patch source files
          $filesToPatch = @(
              "CMakeLists.txt",
              "installer/*.*",
              "src/*.*",
              ".craft/blueprints/owncloud/owncloud-client/*.py"
          )
          
          Get-ChildItem -Path $filesToPatch -Recurse -ErrorAction SilentlyContinue | ForEach-Object {
              (Get-Content $_.FullName -Raw) -replace 'ownCloud', 'piCloud' | Set-Content $_.FullName -NoNewline
          }

      - name: Verify Branding Files
        shell: pwsh
        run: |
          $brandingFile = ".craft/blueprints/owncloud/owncloud-client/files/branding.nsi"
          if (-not (Test-Path $brandingFile)) {
              Write-Error "Branding file missing at $brandingFile"
              exit 1
          }
          Write-Host "Branding file verified at $brandingFile"

      # ===== BUILD SETUP =====
      - name: Craft unshelve
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --unshelve "${env:GITHUB_WORKSPACE}/.craft.shelf"

      - name: Configure Build with Branding
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --set "applicationName=piCloud" owncloud/owncloud-client
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --set "vendorName=LNKASIA TECHSOL" owncloud/owncloud-client

      - name: Prepare build environment
        run: |
          New-Item -ItemType Directory "${env:ARTIFACT_DIR}" -Force
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --set forceAsserts=true owncloud/owncloud-client
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --set srcDir="${env:GITHUB_WORKSPACE}" owncloud/owncloud-client
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c dev-utils/nsis
          
          $binutilsPath = "D:\craft\CraftMaster\downloads\archives\dev-utils\binutils"
          Write-Host "Checking for dev-utils/binutils at $binutilsPath"
          if (-not (Test-Path $binutilsPath)) {
            Write-Host "dev-utils/binutils not found at $binutilsPath, attempting to download..."
            & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --verbose dev-utils/binutils
            if (-not (Test-Path $binutilsPath)) {
              Write-Error "Failed to download dev-utils/binutils. Please check the URL or network connection."
              exit 1
            }
          }
          else {
            Write-Host "dev-utils/binutils found at $binutilsPath, proceeding with build..."
          }

      - name: Install dependencies
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --install-deps owncloud/owncloud-client

      # ===== BUILD STEPS =====
      - name: Build
        if: ${{ !matrix.useSonarCloud }}
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --no-cache owncloud/owncloud-client

      - name: Build for SonarCloud
        if: ${{ matrix.useSonarCloud }}
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --no-cache --configure owncloud/owncloud-client
          $env:BUILD_DIR = $(& "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --get buildDir -q owncloud-client)
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --run pwsh "${env:GITHUB_WORKSPACE}/.github/workflows/.sonar.ps1" --build
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --no-cache --install --qmerge owncloud/owncloud-client
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --run pwsh "${env:GITHUB_WORKSPACE}/.github/workflows/.sonar.ps1" --analyze

      - name: Run tests
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --no-cache --test owncloud/owncloud-client

      - name: Clang tidy
        if: github.event_name != 'pull_request'
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c libs/llvm python-modules/pip
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --run python3 -m pip install clang-html
          $env:BUILD_DIR = $(& "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --get buildDir -q owncloud-client)
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --run pwsh "${env:GITHUB_WORKSPACE}/.github/workflows/.run-clang-tidy.ps1"
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --run python3 -m clang_html "${env:TMPDIR}/clang-tidy.log" -o "${env:ARTIFACT_DIR}/clang-tidy-$env:VERSION.html"

      # ===== POST-BUILD BRANDING ENFORCEMENT =====
      - name: Patch Generated Installer Scripts
        shell: pwsh
        run: |
          # 1. Find all generated NSIS scripts
          $nsiFiles = Get-ChildItem -Path "$env:HOME/craft/build" -Recurse -Filter "*.nsi*" -File
          
          # 2. Force include branding and replace strings
          $nsiFiles | ForEach-Object {
              $content = Get-Content $_.FullName -Raw
              $newContent = '!include ".craft/blueprints/owncloud/owncloud-client/files/branding.nsi"' + "`r`n" + $content
              $newContent = $newContent -replace 'ownCloud', 'piCloud'
              Set-Content -Path $_.FullName -Value $newContent -NoNewline
          }

      - name: Package application
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --no-cache --package owncloud/owncloud-client
          Copy-Item "$env:HOME/craft/binaries/*" "${env:ARTIFACT_DIR}/" -ErrorAction SilentlyContinue

      # ===== FINAL VERIFICATION =====
      - name: Verify Installer Branding
        shell: pwsh
        run: |
          # 1. Find installer
          $installer = Get-ChildItem -Path "${env:ARTIFACT_DIR}/*.exe" | Select-Object -First 1
          if (-not $installer) {
              Write-Error "No installer found in ${env:ARTIFACT_DIR}"
              exit 1
          }

          # 2. Rename installer
          $newName = $installer.Name -replace 'ownCloud', 'piCloud'
          Rename-Item -Path $installer.FullName -NewName $newName

          # 3. Verify branding strings
          $requiredStrings = @(
              "piCloud",
              "LNKASIA",
              "TECHSOL",
              "piCloud Client"
          )
          
          $missingStrings = @()
          foreach ($str in $requiredStrings) {
              $found = & strings.exe "$($installer.DirectoryName)/$newName" | Select-String $str
              if (-not $found) {
                  $missingStrings += $str
              }
          }

          if ($missingStrings.Count -gt 0) {
              Write-Error "Missing branding strings: $($missingStrings -join ', ')"
              exit 1
          }
          
          Write-Host "All branding strings verified successfully"

      - name: Save build state
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --shelve "${env:GITHUB_WORKSPACE}/.craft.shelf"
          Copy-Item "${env:GITHUB_WORKSPACE}/.craft.shelf" "${env:ARTIFACT_DIR}/"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PiCloud-Build-${{ matrix.name }}-${{ env.VERSION }}
          path: |
            ${{ env.ARTIFACT_DIR }}/*piCloud*.exe
            ${{ env.ARTIFACT_DIR }}/*.msi
            ${{ env.ARTIFACT_DIR }}/clang-tidy-*.html
            ${{ env.ARTIFACT_DIR }}/.craft.shelf
          retention-days: 7
          if-no-files-found: error
