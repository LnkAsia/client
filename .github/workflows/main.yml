name: PiCloud CI (Windows Only)

on:
  push:
    branches:
      - master
      - '[0-9]+'
  pull_request:
  workflow_dispatch:

concurrency: 
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  VERSION: ${{ github.run_number }}
  ARTIFACT_DIR: ${{ github.workspace }}/binaries

jobs:
  build:
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: windows-cl-x86_64
            target: windows-cl-msvc2022-x86_64
            os: windows-latest
            useSonarCloud: ${{ github.event_name != 'pull_request' }}

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    env:
      CRAFT_TARGET: ${{ matrix.target }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Check out latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: ~/cache
          key: ${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-

      - name: Clone CraftMaster
        run: git clone --depth=1 https://invent.kde.org/kde/craftmaster.git "$env:HOME/craft/CraftMaster/CraftMaster"

      - name: Craft setup
        run: |
          New-Item -Path ~/cache -ItemType Directory -ErrorAction SilentlyContinue
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" --setup

      - name: Craft unshelve
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --unshelve "${env:GITHUB_WORKSPACE}/.craft.shelf"

      - name: Prepare build environment
        run: |
          New-Item -ItemType Directory "${env:ARTIFACT_DIR}" -Force
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --set forceAsserts=true owncloud/owncloud-client
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --set srcDir="${env:GITHUB_WORKSPACE}" owncloud/owncloud-client
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c dev-utils/nsis

      - name: Install dependencies
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --install-deps owncloud/owncloud-client

      - name: Build
        if: ${{ !matrix.useSonarCloud }}
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --no-cache owncloud/owncloud-client

      - name: Build for SonarCloud
        if: ${{ matrix.useSonarCloud }}
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --no-cache --configure owncloud/owncloud-client
          $env:BUILD_DIR = $(& "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --get buildDir -q owncloud-client)
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --run pwsh "${env:GITHUB_WORKSPACE}/.github/workflows/.sonar.ps1" --build
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --no-cache --install --qmerge owncloud/owncloud-client
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --run pwsh "${env:GITHUB_WORKSPACE}/.github/workflows/.sonar.ps1" --analyze

      - name: Run tests
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --no-cache --test owncloud/owncloud-client

      - name: Clang tidy
        if: github.event_name != 'pull_request'
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c libs/llvm python-modules/pip
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --run python3 -m pip install clang-html
          $env:BUILD_DIR = $(& "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --get buildDir -q owncloud-client)
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --run pwsh "${env:GITHUB_WORKSPACE}/.github/workflows/.run-clang-tidy.ps1"
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --run python3 -m clang_html "${env:TMPDIR}/clang-tidy.log" -o "${env:ARTIFACT_DIR}/clang-tidy-$env:VERSION.html"
      
      - name: Modify NSIS installer script
        run: |
          # Find and validate NSIS file
          $nsisFile = Get-ChildItem -Path $env:GITHUB_WORKSPACE -Recurse -Filter "owncloud-client.nsi" | 
                      Select-Object -First 1 -ExpandProperty FullName
          
          if (-not $nsisFile) {
              Write-Error "owncloud-client.nsi file not found!"
              exit 1
          }

          # Create backup
          $backupFile = "$nsisFile.backup_$(Get-Date -Format 'yyyyMMddHHmmss')"
          Copy-Item $nsisFile $backupFile
          
          # Read and transform content
          $content = Get-Content $nsisFile -Raw
          
          # Branding replacements
          $replacements = @{
              'ownCloud' = 'PiCloud'
              'owncloud' = 'picloud'
              'https://owncloud\.com' = 'https://lnkasia.com'
              'Copyright © ownCloud GmbH' = 'Copyright © LNKASIA TECHSOL'
              'ProductName "ownCloud"' = 'ProductName "PiCloud"'
              'DisplayName "ownCloud"' = 'DisplayName "PiCloud"'
          }
          
          foreach ($key in $replacements.Keys) {
              $content = $content -replace $key, $replacements[$key]
          }
          
          # Add version information
          $versionBlock = @"

; ======================
; PiCloud Version Info
; ======================
!define VERSION "$env:VERSION"
!define BUILD_DATE "$(Get-Date -Format 'yyyy-MM-dd')"
!define COMPANY_NAME "LNKASIA TECHSOL"
!define LEGAL_COPYRIGHT "Copyright © $(Get-Date -Format 'yyyy') LNKASIA TECHSOL. All rights reserved."
"@
          
          # Insert version block after header
          $content = $content -replace '(?s)(\A.*?^\}\s*?\n)', "`$1`n$versionBlock`n"
          
          # Write modified content
          Set-Content -Path $nsisFile -Value $content -Encoding UTF8
          
          Write-Output "Successfully modified NSIS installer: $nsisFile"
          Write-Output "Backup created at: $backupFile"

      - name: Package application
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --no-cache --package owncloud/owncloud-client
          Copy-Item "$env:HOME/craft/binaries/*" "${env:ARTIFACT_DIR}/" -ErrorAction SilentlyContinue

      - name: Save build state
        run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --shelve "${env:GITHUB_WORKSPACE}/.craft.shelf"
          Copy-Item "${env:GITHUB_WORKSPACE}/.craft.shelf" "${env:ARTIFACT_DIR}/"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PiCloud-Build-${{ matrix.name }}-${{ env.VERSION }}
          path: |
            ${{ env.ARTIFACT_DIR }}/*.exe
            ${{ env.ARTIFACT_DIR }}/*.msi
            ${{ env.ARTIFACT_DIR }}/clang-tidy-*.html
            ${{ env.ARTIFACT_DIR }}/.craft.shelf
          retention-days: 7
          if-no-files-found: error
